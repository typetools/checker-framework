evaluationDependsOn(":checker-qual")

task copySources(type: Copy) {
    from files('../checker-qual/src/')
    include "**/*.java"
    into file('src')
    fileMode(0555)
}
copySources.dependsOn(":checker-qual:copySources")
copySources.dependsOn(":checker-qual:copyCompatQual")

task replaceAnnotations {
    doLast {
        fileTree(dir: 'src', include: "**/*.java").each {
            it.text = it.text.replaceAll("RetentionPolicy.RUNTIME", "RetentionPolicy.CLASS")
        }
    }
}
replaceAnnotations.dependsOn copySources

sourceSets {
    compatQual
}

compileJava.dependsOn replaceAnnotations

compileCompatQualJava {
    dependsOn replaceAnnotations
    doFirst {
        sourceCompatibility = 1.6
        targetCompatibility = 1.6
    }
}

task compatQualJavadoc(type: Javadoc) {
    source = sourceSets.compatQual.java
}

task compatQualJar(type: Jar, dependsOn: compileCompatQualJava) {
    baseName = 'checker-compat-qual-android'
    from compileCompatQualJava.outputs
    manifest {
        attributes('Automatic-Module-Name': "org.checkerframework.checker.qual")
    }
}

task compatQualSourcesJar(type: Jar) {
    description 'Creates compat-qual sources jar.'
    classifier = 'source'
    baseName = 'checker-compat-qual-android'
    from sourceSets.compatQual.java
}

// Create a javadocJar task for each subproject
task compatQualJavadocJar(type: Jar, dependsOn: compatQualJavadoc) {
    description 'Creates compat-qual javadoc jar.'
    classifier = 'javadoc'
    baseName = 'checker-compat-qual-android'
    from compatQualJavadoc.destinationDir
}


artifacts {
    archives compatQualJar
}

clean {
    delete file('src')
}
