required.method.not.called=@MustCall %s not invoked.  The type of object is: %s.  Reason for going out of scope: %s
missing.creates.obligation=This method re-assigns the non-final, owning field %s.%s, but does not have a corresponding @CreatesObligation annotation.\n
incompatible.creates.obligation=This method re-assigns the non-final, owning field %s.%s, but its @CreatesObligation annotation targets %s.\n
reset.not.owning=Calling this method resets the must-call obligations of the expression %s, which is non-owning. Either annotate its declaration with an @Owning annotation, extract it into a local variable, or write a corresponding @CreatesObligation annotation on the method that encloses this statement.\n
creates.obligation.override.invalid=Method %s cannot override method %s, which defines fewer @CreatesObligation targets.\nfound:    %s\nrequired: %s\n
