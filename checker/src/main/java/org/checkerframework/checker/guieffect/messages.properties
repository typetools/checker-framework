call.ui=Calling a method with %s effect from a context limited to %s effects.
annotations.conflicts=A method may only have one effect annotation from @UI, @AlwaysSafe, and @PolyUI.
override.effect=A method override may only be @UI if it overrides an @UI method.%nmethod in %s%n  %s%n  cannot override method in %s%n  %s
override.effect.polymorphic=A method override may only be @PolyUIEffect if it overrides a @PolyUIEffect method.%nmethod in %s%n  %s%n  cannot override method in %s%n  %s
override.effect.nonui=A method override may only be @UI if it overrides an @UI method (overriding non-UI instantiation of supertype).%nmethod in %s%n  %s%n  cannot override method in %s%n  %s
override.effect.warning.inheritance=method in %s%n  %s%noverrides a method with @UI effect in %s%n  %s%nand another method with an @AlwaysSafe effect in %s%n  %s%nThis is discouraged.
polymorphism=Only @PolyUIType types may have @PolyUIEffect methods.
inheritance.polymorphic=An effect-polymorphic type may only inherit from another effect-polymorphic type (%s extends/implements %s).
effects.redundant.uitype=This method is annotated @UIEffect, which is redundant because the enclosing type is @UIType.
