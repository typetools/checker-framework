import org.checkerframework.checker.interning.qual.*;

// This file was generated by running the following commands:
//   cd ~/java/jdk/src
//   search -i -n '\bintern(|alized?|ed|ing)\b'
//   search -n -n 'public static final String[^;]*"'
// and examining the search results.

package java.io;

public @UsesObjectEquals class ObjectStreamField
    implements Comparable<Object>
{
  public @Interned String getTypeString();
}

package java.lang;

// All instances of Class are interned.
@Interned class Class<T> {
  // In the Oracle JDK, the result of getName is interned
  public @Interned String getName();
}

@UsesObjectEquals class ClassValue<T> {}

class String {
  @Interned String intern();
}

class Boolean {
  @Interned Boolean FALSE;
  @Interned Boolean TRUE;
  public static @Interned Boolean valueOf(String s);
  public static @Interned Boolean valueOf(boolean b);
}

class Byte {
  public static @Interned Byte valueOf(byte b);
  public static @Interned Byte valueOf(String s);
  public static @Interned Byte valueOf(String s, int radix);
}

class Character {
    @Interned class UnicodeBlock { }
}

@UsesObjectEquals class Thread implements Runnable {}

package java.lang.reflect;

class Field {
  public @Interned String getName();
}

class Method {
  public @Interned String getName();
}

package java.util;

public final class Locale implements Cloneable, Serializable {
  public @Interned String getCountry();
  public @Interned String getVariant();
}

public class Arrays{
  public static void sort(@PolyInterned Object[] a1);
  public static void sort(@PolyInterned Object[] a1, int a2, int a3);
  public static int binarySearch(@PolyInterned Object[] a1, @PolyInterned Object a2);
  public static int binarySearch(@PolyInterned Object[] a1, int a2, int a3, @PolyInterned Object a4);
  public static boolean equals(@PolyInterned Object [] a1, @PolyInterned Object [] a2);
  public static void fill(@PolyInterned Object[] a1, @PolyInterned Object a2);
  public static void fill(@PolyInterned Object[] a1, int a2, int a3, @PolyInterned Object a4);
  public static int hashCode(@PolyInterned Object [] a1);
  public static int deepHashCode(@PolyInterned Object [] a1);
  public static boolean deepEquals(@PolyInterned Object [] a1, @PolyInterned Object [] a2);
  public static String toString(@PolyInterned Object [] a1);
  public static String deepToString(@PolyInterned Object [] a1);
}

@UsesObjectEquals class ComparableTimSort {}
public final @UsesObjectEquals class Currency implements Serializable {}
final @UsesObjectEquals class DualPivotQuicksort {}
public abstract @UsesObjectEquals class EventListenerProxy<T extends EventListener>
        implements EventListener {}
public @UsesObjectEquals class EventObject implements java.io.Serializable {}
public @UsesObjectEquals class FormattableFlags {}
@UsesObjectEquals class LocaleISOData {}
public final @UsesObjectEquals class Objects {}
public @UsesObjectEquals class Observable {}
public @UsesObjectEquals class Random implements java.io.Serializable {}
public final @UsesObjectEquals class Scanner implements Iterator<String>, Closeable {}
public final @UsesObjectEquals class ServiceLoader<S>
    implements Iterable<S> {}
public @UsesObjectEquals class StringTokenizer implements Enumeration<Object> {}
@UsesObjectEquals class TimSort<T> {}
public @UsesObjectEquals class Timer {}
public abstract @UsesObjectEquals class TimerTask implements Runnable {}
@UsesObjectEquals class XMLUtils {}

/*
TODO: Attributes does not declare a toString method.
This declaration then pollutes java.lang.Object.toString, making
any override illegal.

package java.util.jar;

public class Attributes implements Map<Object,Object>, Cloneable {
  public @Interned String toString();
}
*/

package java.util.regex;

@UsesObjectEquals class Pattern {
}

package javax.management;

public class MBeanServerPermission extends BasicPermission {
  static @Interned String getCanonicalName(int mask);
}

package javax.swing;

public class DefaultListCellRenderer extends JLabel
    implements ListCellRenderer<Object>, Serializable
{
    protected void firePropertyChange(@Interned String propertyName, Object oldValue, Object newValue);
}

package javax.swing.tree;

public class DefaultTreeCellRenderer extends JLabel implements TreeCellRenderer
{
  protected void firePropertyChange(@Interned String propertyName, Object oldValue, Object newValue);
}

package javax.swing.table;

public class DefaultTableCellRenderer extends JLabel
    implements TableCellRenderer, Serializable
{
  protected void firePropertyChange(@Interned String propertyName, Object oldValue, Object newValue);
}

package java.awt.datatransfer;
public class DataFlavor {
     public static final @Interned String javaSerializedObjectMimeType = "application/x-java-serialized-object";
     public static final @Interned String javaJVMLocalObjectMimeType = "application/x-java-jvm-local-objectref";
     public static final @Interned String javaRemoteObjectMimeType = "application/x-java-remote-object";
}
package java.awt;
public @UsesObjectEquals class BorderLayout {
     public static final @Interned String NORTH  = "North";
     public static final @Interned String SOUTH  = "South";
     public static final @Interned String EAST   = "East";
     public static final @Interned String WEST   = "West";
     public static final @Interned String CENTER = "Center";
     public static final @Interned String BEFORE_FIRST_LINE = "First";
     public static final @Interned String AFTER_LAST_LINE = "Last";
     public static final @Interned String BEFORE_LINE_BEGINS = "Before";
     public static final @Interned String AFTER_LINE_ENDS = "After";
}
public class Font {
     public static final @Interned String DIALOG = "Dialog";
     public static final @Interned String DIALOG_INPUT = "DialogInput";
     public static final @Interned String SANS_SERIF = "SansSerif";
     public static final @Interned String SERIF = "Serif";
     public static final @Interned String MONOSPACED = "Monospaced";
}
public @UsesObjectEquals class GradientPaint implements Paint {}
public @UsesObjectEquals class AWTEventMulticaster implements
    ComponentListener, ContainerListener, FocusListener, KeyListener,
    MouseListener, MouseMotionListener, WindowListener, WindowFocusListener,
    WindowStateListener, ActionListener, ItemListener, AdjustmentListener,
    TextListener, InputMethodListener, HierarchyListener,
    HierarchyBoundsListener, MouseWheelListener {}
abstract @UsesObjectEquals class AttributeValue {}
public @UsesObjectEquals class BufferCapabilities implements Cloneable {}
public @UsesObjectEquals class CardLayout implements LayoutManager2,
                                   Serializable {}
public @UsesObjectEquals class CheckboxGroup implements java.io.Serializable {}
@UsesObjectEquals class ColorPaintContext implements PaintContext {}
public abstract @UsesObjectEquals class Component implements ImageObserver, MenuContainer,
                                           Serializable {}
public final @UsesObjectEquals class ComponentOrientation implements java.io.Serializable {}
public @UsesObjectEquals class Cursor implements java.io.Serializable {}
public @UsesObjectEquals class Desktop {}
public @UsesObjectEquals class Event implements java.io.Serializable {}
public @UsesObjectEquals class EventQueue {}
public abstract @UsesObjectEquals class FocusTraversalPolicy {}
public abstract @UsesObjectEquals class FontMetrics implements java.io.Serializable {}
@UsesObjectEquals class GradientPaintContext implements PaintContext {}
public abstract @UsesObjectEquals class Graphics {}
public abstract @UsesObjectEquals class GraphicsConfigTemplate implements Serializable {}
public abstract @UsesObjectEquals class GraphicsConfiguration {}
public abstract @UsesObjectEquals class GraphicsDevice {}
public abstract @UsesObjectEquals class GraphicsEnvironment {}
public @UsesObjectEquals class GridBagConstraints implements Cloneable, java.io.Serializable {}
public @UsesObjectEquals class GridBagLayout implements LayoutManager2,
java.io.Serializable {}
public @UsesObjectEquals class GridBagLayoutInfo implements java.io.Serializable {}
public @UsesObjectEquals class GridLayout implements LayoutManager, java.io.Serializable {}
public abstract @UsesObjectEquals class Image {}
public @UsesObjectEquals class ImageCapabilities implements Cloneable {}
public abstract @UsesObjectEquals class KeyboardFocusManager
    implements KeyEventDispatcher, KeyEventPostProcessor {}
public @UsesObjectEquals class MediaTracker implements java.io.Serializable {}
public abstract @UsesObjectEquals class MenuComponent implements java.io.Serializable {}
abstract @UsesObjectEquals class ModalEventFilter implements EventFilter {}
public @UsesObjectEquals class MouseInfo {}
public abstract @UsesObjectEquals class MultipleGradientPaint implements Paint {}
abstract @UsesObjectEquals class MultipleGradientPaintContext implements PaintContext {}
public @UsesObjectEquals class PointerInfo {}
public @UsesObjectEquals class Polygon implements Shape, java.io.Serializable {}
public abstract @UsesObjectEquals class PrintJob {}
public @UsesObjectEquals class Robot {}
public @UsesObjectEquals class ScrollPaneAdjustable implements Adjustable, Serializable {}
public final @UsesObjectEquals class SplashScreen {}
public @UsesObjectEquals class SystemTray {}
public @UsesObjectEquals class TexturePaint implements Paint {}
abstract @UsesObjectEquals class TexturePaintContext implements PaintContext {}
public @UsesObjectEquals class TrayIcon {}
public abstract @UsesObjectEquals class Toolkit {}
@UsesObjectEquals class WaitDispatchSupport implements SecondaryLoop {}
public abstract @UsesObjectEquals class Image {}

package java.io;
public class File {
     public static final @Interned String separator = "" + separatorChar;
     public static final @Interned String pathSeparator = "" + pathSeparatorChar;
}
package java.util.jar;
public class JarFile {
     public static final @Interned String MANIFEST_NAME = "META-INF/MANIFEST.MF";
}
package java.util.logging;
public @UsesObjectEquals class Logger {
     public static final @Interned String GLOBAL_LOGGER_NAME = "global";
}
@Interned class Level { }
package javax.accessibility;
public class AccessibleAction {
     public static final @Interned String CLICK = new String("click");
     public static final @Interned String TOGGLE_POPUP = new String("toggle popup");
}
package javax.accessibility;
public class AccessibleContext {
    public static final @Interned String ACCESSIBLE_NAME_PROPERTY = "AccessibleName";
    public static final @Interned String ACCESSIBLE_DESCRIPTION_PROPERTY = "AccessibleDescription";
    public static final @Interned String ACCESSIBLE_STATE_PROPERTY = "AccessibleState";
    public static final @Interned String ACCESSIBLE_VALUE_PROPERTY = "AccessibleValue";
    public static final @Interned String ACCESSIBLE_SELECTION_PROPERTY = "AccessibleSelection";
    public static final @Interned String ACCESSIBLE_CARET_PROPERTY = "AccessibleCaret";
    public static final @Interned String ACCESSIBLE_VISIBLE_DATA_PROPERTY = "AccessibleVisibleData";
    public static final @Interned String ACCESSIBLE_CHILD_PROPERTY = "AccessibleChild";
    public static final @Interned String ACCESSIBLE_ACTIVE_DESCENDANT_PROPERTY = "AccessibleActiveDescendant";
}
package javax.accessibility;
public class AccessibleRelation {
     public static final @Interned String LABEL_FOR = new String("labelFor");
     public static final @Interned String LABELED_BY = new String("labeledBy");
     public static final @Interned String MEMBER_OF = new String("memberOf");
     public static final @Interned String CONTROLLER_FOR = new String("controllerFor");
     public static final @Interned String CONTROLLED_BY = new String("controlledBy");
     public static final @Interned String FLOWS_TO = "flowsTo";
     public static final @Interned String FLOWS_FROM = "flowsFrom";
     public static final @Interned String SUBWINDOW_OF = "subwindowOf";
     public static final @Interned String PARENT_WINDOW_OF = "parentWindowOf";
     public static final @Interned String EMBEDS = "embeds";
     public static final @Interned String EMBEDDED_BY = "embeddedBy";
     public static final @Interned String CHILD_NODE_OF = "childNodeOf";
     public static final @Interned String LABEL_FOR_PROPERTY = "labelForProperty";
     public static final @Interned String LABELED_BY_PROPERTY = "labeledByProperty";
     public static final @Interned String MEMBER_OF_PROPERTY = "memberOfProperty";
     public static final @Interned String CONTROLLER_FOR_PROPERTY = "controllerForProperty";
     public static final @Interned String CONTROLLED_BY_PROPERTY = "controlledByProperty";
     public static final @Interned String FLOWS_TO_PROPERTY = "flowsToProperty";
     public static final @Interned String FLOWS_FROM_PROPERTY = "flowsFromProperty";
     public static final @Interned String SUBWINDOW_OF_PROPERTY = "subwindowOfProperty";
     public static final @Interned String PARENT_WINDOW_OF_PROPERTY = "parentWindowOfProperty";
     public static final @Interned String EMBEDS_PROPERTY = "embedsProperty";
     public static final @Interned String EMBEDDED_BY_PROPERTY = "embeddedByProperty";
     public static final @Interned String CHILD_NODE_OF_PROPERTY = "childNodeOfProperty";
}
package javax.management.monitor;
public class MonitorNotification {
     public static final @Interned String OBSERVED_OBJECT_ERROR = "jmx.monitor.error.mbean";
     public static final @Interned String OBSERVED_ATTRIBUTE_ERROR = "jmx.monitor.error.attribute";
     public static final @Interned String OBSERVED_ATTRIBUTE_TYPE_ERROR = "jmx.monitor.error.type";
     public static final @Interned String THRESHOLD_ERROR = "jmx.monitor.error.threshold";
     public static final @Interned String RUNTIME_ERROR = "jmx.monitor.error.runtime";
     public static final @Interned String THRESHOLD_VALUE_EXCEEDED = "jmx.monitor.counter.threshold";
     public static final @Interned String THRESHOLD_HIGH_VALUE_EXCEEDED = "jmx.monitor.gauge.high";
     public static final @Interned String THRESHOLD_LOW_VALUE_EXCEEDED = "jmx.monitor.gauge.low";
     public static final @Interned String STRING_TO_COMPARE_VALUE_MATCHED = "jmx.monitor.string.matches";
     public static final @Interned String STRING_TO_COMPARE_VALUE_DIFFERED = "jmx.monitor.string.differs";
}
package javax.management.relation;
public class RelationNotification {
     public static final @Interned String RELATION_BASIC_CREATION = "jmx.relation.creation.basic";
     public static final @Interned String RELATION_MBEAN_CREATION = "jmx.relation.creation.mbean";
     public static final @Interned String RELATION_BASIC_UPDATE = "jmx.relation.update.basic";
     public static final @Interned String RELATION_MBEAN_UPDATE = "jmx.relation.update.mbean";
     public static final @Interned String RELATION_BASIC_REMOVAL = "jmx.relation.removal.basic";
     public static final @Interned String RELATION_MBEAN_REMOVAL = "jmx.relation.removal.mbean";
}
package javax.management.remote;
public class JMXConnectionNotification {
     public static final @Interned String OPENED = "jmx.remote.connection.opened";
     public static final @Interned String CLOSED = "jmx.remote.connection.closed";
     public static final @Interned String FAILED = "jmx.remote.connection.failed";
}
package javax.management;
public class AttributeChangeNotification {
     public static final @Interned String ATTRIBUTE_CHANGE = "jmx.attribute.change";
}
package javax.management;
public class JMX {
     public static final @Interned String DEFAULT_VALUE_FIELD = "defaultValue";
     public static final @Interned String IMMUTABLE_INFO_FIELD = "immutableInfo";
     public static final @Interned String INTERFACE_CLASS_NAME_FIELD = "interfaceClassName";
     public static final @Interned String LEGAL_VALUES_FIELD = "legalValues";
     public static final @Interned String MAX_VALUE_FIELD = "maxValue";
     public static final @Interned String MIN_VALUE_FIELD = "minValue";
     public static final @Interned String MXBEAN_FIELD = "mxbean";
     public static final @Interned String OPEN_TYPE_FIELD = "openType";
     public static final @Interned String ORIGINAL_TYPE_FIELD = "originalType";
}
package javax.naming.ldap;
public class ManageReferralControl {
     public static final @Interned String OID = "2.16.840.1.113730.3.4.2";
}
package javax.naming.ldap;
public class PagedResultsControl {
     public static final @Interned String OID = "1.2.840.113556.1.4.319";
}
package javax.naming.ldap;
public class PagedResultsResponseControl {
     public static final @Interned String OID = "1.2.840.113556.1.4.319";
}
package javax.naming.ldap;
public class SortControl {
     public static final @Interned String OID = "1.2.840.113556.1.4.473";
}
package javax.naming.ldap;
public class SortResponseControl {
     public static final @Interned String OID = "1.2.840.113556.1.4.474";
}
package javax.naming.ldap;
public class StartTlsRequest {
     public static final @Interned String OID = "1.3.6.1.4.1.1466.20037";
}
package javax.naming.ldap;
public class StartTlsResponse {
     public static final @Interned String OID = "1.3.6.1.4.1.1466.20037";
}
package javax.naming.spi;
public class NamingManager {
     public static final @Interned String CPE = "java.naming.spi.CannotProceedException";
}
package javax.print;
public class ServiceUIFactory {
     public static final @Interned String JCOMPONENT_UI = "javax.swing.JComponent";
     public static final @Interned String PANEL_UI = "java.awt.Panel";
     public static final @Interned String DIALOG_UI = "java.awt.Dialog";
     public static final @Interned String JDIALOG_UI = "javax.swing.JDialog";
}
package javax.script;
public class ScriptEngine {
     public static final @Interned String ARGV="javax.script.argv";
     public static final @Interned String FILENAME = "javax.script.filename";
     public static final @Interned String ENGINE = "javax.script.engine";
     public static final @Interned String ENGINE_VERSION = "javax.script.engine_version";
     public static final @Interned String NAME = "javax.script.name";
     public static final @Interned String LANGUAGE = "javax.script.language";
     public static final @Interned String LANGUAGE_VERSION ="javax.script.language_version";
}
package javax.security.auth.x500;
public class X500Principal {
     public static final @Interned String RFC1779 = "RFC1779";
     public static final @Interned String RFC2253 = "RFC2253";
     public static final @Interned String CANONICAL = "CANONICAL";
}
package javax.security.sasl;
public class Sasl {
     public static final @Interned String QOP = "javax.security.sasl.qop";
     public static final @Interned String STRENGTH = "javax.security.sasl.strength";
     public static final @Interned String MAX_BUFFER = "javax.security.sasl.maxbuffer";
     public static final @Interned String RAW_SEND_SIZE = "javax.security.sasl.rawsendsize";
      public static final @Interned String REUSE = "javax.security.sasl.reuse";
     public static final @Interned String CREDENTIALS = "javax.security.sasl.credentials";
}
package javax.swing.plaf.basic;
public class BasicHTML {
     public static final @Interned String propertyKey = "html";
     public static final @Interned String documentBaseKey = "html.base";
}
package javax.swing.plaf.basic;
class BasicRootPaneUI extends RootPaneUI implements PropertyChangeListener {
    public class Actions {
             public static final @Interned String PRESS = "press";
             public static final @Interned String RELEASE = "release";
             public static final @Interned String POST_POPUP = "postPopup";
    }
}
package javax.swing.plaf.basic;
class BasicSliderUI extends SliderUI {
    public class Actions {
             public static final @Interned String MIN_SCROLL_INCREMENT = "minScroll";
             public static final @Interned String MAX_SCROLL_INCREMENT = "maxScroll";
    }
}
package javax.swing.plaf.metal;
public class MetalScrollBarUI {
     public static final @Interned String FREE_STANDING_PROP = "JScrollBar.isFreeStanding";
}
package javax.swing.plaf.nimbus;
public class NimbusStyle {
     public static final @Interned String LARGE_KEY = "large";
     public static final @Interned String SMALL_KEY = "small";
     public static final @Interned String MINI_KEY = "mini";
}
package javax.swing.text.html;
public class FormView {
     public static final @Interned String SUBMIT = new String("Submit Query");
     public static final @Interned String RESET = new String("Reset");
}
package javax.swing.text.html;
public class HTML {
     public static final @Interned String NULL_ATTRIBUTE_VALUE = "#DEFAULT";
}
package javax.swing.text.html;
public class HTMLDocument {
     public static final @Interned String AdditionalComments = "AdditionalComments";
}
package javax.swing.text.html;
public class HTMLEditorKit {
     public static final @Interned String DEFAULT_CSS = "default.css";
     public static final @Interned String  BOLD_ACTION = "html-bold-action";
     public static final @Interned String  ITALIC_ACTION = "html-italic-action";
     public static final @Interned String  PARA_INDENT_LEFT = "html-para-indent-left";
     public static final @Interned String  PARA_INDENT_RIGHT = "html-para-indent-right";
     public static final @Interned String  FONT_CHANGE_BIGGER = "html-font-bigger";
     public static final @Interned String  FONT_CHANGE_SMALLER = "html-font-smaller";
     public static final @Interned String  COLOR_ACTION = "html-color-action";
     public static final @Interned String  LOGICAL_STYLE_ACTION = "html-logical-style-action";
     public static final @Interned String  IMG_ALIGN_TOP = "html-image-align-top";
     public static final @Interned String  IMG_ALIGN_MIDDLE = "html-image-align-middle";
     public static final @Interned String  IMG_ALIGN_BOTTOM = "html-image-align-bottom";
     public static final @Interned String  IMG_BORDER = "html-image-border";
}
package javax.swing.text;
public class AbstractDocument {
     public static final @Interned String ParagraphElementName = "paragraph";
     public static final @Interned String ContentElementName = "content";
     public static final @Interned String SectionElementName = "section";
     public static final @Interned String BidiElementName = "bidi level";
     public static final @Interned String ElementNameAttribute = "$ename";
}
package javax.swing.text;
public class DefaultEditorKit {
     public static final @Interned String EndOfLineStringProperty = "__EndOfLine__";
     public static final @Interned String insertContentAction = "insert-content";
     public static final @Interned String insertBreakAction = "insert-break";
     public static final @Interned String insertTabAction = "insert-tab";
     public static final @Interned String deletePrevCharAction = "delete-previous";
     public static final @Interned String deleteNextCharAction = "delete-next";
     public static final @Interned String deleteNextWordAction = "delete-next-word";
     public static final @Interned String deletePrevWordAction = "delete-previous-word";
     public static final @Interned String readOnlyAction = "set-read-only";
     public static final @Interned String writableAction = "set-writable";
     public static final @Interned String cutAction = "cut-to-clipboard";
     public static final @Interned String copyAction = "copy-to-clipboard";
     public static final @Interned String pasteAction = "paste-from-clipboard";
     public static final @Interned String beepAction = "beep";
     public static final @Interned String pageUpAction = "page-up";
     public static final @Interned String pageDownAction = "page-down";
     public static final @Interned String forwardAction = "caret-forward";
     public static final @Interned String backwardAction = "caret-backward";
     public static final @Interned String selectionForwardAction = "selection-forward";
     public static final @Interned String selectionBackwardAction = "selection-backward";
     public static final @Interned String upAction = "caret-up";
     public static final @Interned String downAction = "caret-down";
     public static final @Interned String selectionUpAction = "selection-up";
     public static final @Interned String selectionDownAction = "selection-down";
     public static final @Interned String beginWordAction = "caret-begin-word";
     public static final @Interned String endWordAction = "caret-end-word";
     public static final @Interned String selectionBeginWordAction = "selection-begin-word";
     public static final @Interned String selectionEndWordAction = "selection-end-word";
     public static final @Interned String previousWordAction = "caret-previous-word";
     public static final @Interned String nextWordAction = "caret-next-word";
     public static final @Interned String selectionPreviousWordAction = "selection-previous-word";
     public static final @Interned String selectionNextWordAction = "selection-next-word";
     public static final @Interned String beginLineAction = "caret-begin-line";
     public static final @Interned String endLineAction = "caret-end-line";
     public static final @Interned String selectionBeginLineAction = "selection-begin-line";
     public static final @Interned String selectionEndLineAction = "selection-end-line";
     public static final @Interned String beginParagraphAction = "caret-begin-paragraph";
     public static final @Interned String endParagraphAction = "caret-end-paragraph";
     public static final @Interned String selectionBeginParagraphAction = "selection-begin-paragraph";
     public static final @Interned String selectionEndParagraphAction = "selection-end-paragraph";
     public static final @Interned String beginAction = "caret-begin";
     public static final @Interned String endAction = "caret-end";
     public static final @Interned String selectionBeginAction = "selection-begin";
     public static final @Interned String selectionEndAction = "selection-end";
     public static final @Interned String selectWordAction = "select-word";
     public static final @Interned String selectLineAction = "select-line";
     public static final @Interned String selectParagraphAction = "select-paragraph";
     public static final @Interned String selectAllAction = "select-all";
     public static final @Interned String defaultKeyTypedAction = "default-typed";
}
package javax.swing.text;
public class Document {
     public static final @Interned String StreamDescriptionProperty = "stream";
     public static final @Interned String TitleProperty = "title";
}
package javax.swing.text;
public class JTextComponent {
     public static final @Interned String FOCUS_ACCELERATOR_KEY = "focusAcceleratorKey";
     public static final @Interned String DEFAULT_KEYMAP = "default";
}
package javax.swing.text;
public class PlainDocument {
     public static final @Interned String tabSizeAttribute = "tabSize";
     public static final @Interned String lineLimitAttribute = "lineLimit";
}
package javax.swing.text;
public class StyleConstants {
     public static final @Interned String ComponentElementName = "component";
     public static final @Interned String IconElementName = "icon";
}
package javax.swing.text;
public class StyleContext {
     public static final @Interned String DEFAULT_STYLE = "default";
}
package javax.swing.tree;
public class DefaultTreeSelectionModel {
     public static final @Interned String          SELECTION_MODE_PROPERTY = "selectionMode";
}
package javax.swing.undo;
public class StateEditable {
     public static final @Interned String RCSID = "$Id: StateEditable.java,v 1.2 1997/09/08 19:39:08 marklin Exp $";
}
package javax.swing;
public class AbstractButton {
     public static final @Interned String MODEL_CHANGED_PROPERTY = "model";
     public static final @Interned String TEXT_CHANGED_PROPERTY = "text";
     public static final @Interned String MNEMONIC_CHANGED_PROPERTY = "mnemonic";
     public static final @Interned String MARGIN_CHANGED_PROPERTY = "margin";
     public static final @Interned String VERTICAL_ALIGNMENT_CHANGED_PROPERTY = "verticalAlignment";
     public static final @Interned String HORIZONTAL_ALIGNMENT_CHANGED_PROPERTY = "horizontalAlignment";
     public static final @Interned String VERTICAL_TEXT_POSITION_CHANGED_PROPERTY = "verticalTextPosition";
     public static final @Interned String HORIZONTAL_TEXT_POSITION_CHANGED_PROPERTY = "horizontalTextPosition";
     public static final @Interned String BORDER_PAINTED_CHANGED_PROPERTY = "borderPainted";
     public static final @Interned String FOCUS_PAINTED_CHANGED_PROPERTY = "focusPainted";
     public static final @Interned String ROLLOVER_ENABLED_CHANGED_PROPERTY = "rolloverEnabled";
     public static final @Interned String CONTENT_AREA_FILLED_CHANGED_PROPERTY = "contentAreaFilled";
     public static final @Interned String ICON_CHANGED_PROPERTY = "icon";
     public static final @Interned String PRESSED_ICON_CHANGED_PROPERTY = "pressedIcon";
     public static final @Interned String SELECTED_ICON_CHANGED_PROPERTY = "selectedIcon";
     public static final @Interned String ROLLOVER_ICON_CHANGED_PROPERTY = "rolloverIcon";
     public static final @Interned String ROLLOVER_SELECTED_ICON_CHANGED_PROPERTY = "rolloverSelectedIcon";
     public static final @Interned String DISABLED_ICON_CHANGED_PROPERTY = "disabledIcon";
     public static final @Interned String DISABLED_SELECTED_ICON_CHANGED_PROPERTY = "disabledSelectedIcon";
}
package javax.swing;
public class Action {
     public static final @Interned String DEFAULT = "Default";
     public static final @Interned String NAME = "Name";
     public static final @Interned String SHORT_DESCRIPTION = "ShortDescription";
     public static final @Interned String LONG_DESCRIPTION = "LongDescription";
     public static final @Interned String SMALL_ICON = "SmallIcon";
     public static final @Interned String ACTION_COMMAND_KEY = "ActionCommandKey";
     public static final @Interned String ACCELERATOR_KEY="AcceleratorKey";
     public static final @Interned String MNEMONIC_KEY="MnemonicKey";
     public static final @Interned String SELECTED_KEY = "SwingSelectedKey";
     public static final @Interned String LARGE_ICON_KEY = "SwingLargeIconKey";
}
package javax.swing;
public class JCheckBox {
     public static final @Interned String BORDER_PAINTED_FLAT_CHANGED_PROPERTY = "borderPaintedFlat";
}
package javax.swing;
public class JColorChooser {
     public static final @Interned String      SELECTION_MODEL_PROPERTY = "selectionModel";
     public static final @Interned String      PREVIEW_PANEL_PROPERTY = "previewPanel";
     public static final @Interned String      CHOOSER_PANELS_PROPERTY = "chooserPanels";
}
package javax.swing;
public class JComponent {
     public static final @Interned String TOOL_TIP_TEXT_KEY = "ToolTipText";
}
package javax.swing;
public class JEditorPane {
     public static final @Interned String W3C_LENGTH_UNITS = "JEditorPane.w3cLengthUnits";
     public static final @Interned String HONOR_DISPLAY_PROPERTIES = "JEditorPane.honorDisplayProperties";
}
package javax.swing;
public class JFileChooser {
     public static final @Interned String CANCEL_SELECTION = "CancelSelection";
     public static final @Interned String APPROVE_SELECTION = "ApproveSelection";
     public static final @Interned String APPROVE_BUTTON_TEXT_CHANGED_PROPERTY = "ApproveButtonTextChangedProperty";
     public static final @Interned String APPROVE_BUTTON_TOOL_TIP_TEXT_CHANGED_PROPERTY = "ApproveButtonToolTipTextChangedProperty";
     public static final @Interned String APPROVE_BUTTON_MNEMONIC_CHANGED_PROPERTY = "ApproveButtonMnemonicChangedProperty";
     public static final @Interned String CONTROL_BUTTONS_ARE_SHOWN_CHANGED_PROPERTY = "ControlButtonsAreShownChangedProperty";
     public static final @Interned String DIRECTORY_CHANGED_PROPERTY = "directoryChanged";
     public static final @Interned String SELECTED_FILE_CHANGED_PROPERTY = "SelectedFileChangedProperty";
     public static final @Interned String SELECTED_FILES_CHANGED_PROPERTY = "SelectedFilesChangedProperty";
     public static final @Interned String MULTI_SELECTION_ENABLED_CHANGED_PROPERTY = "MultiSelectionEnabledChangedProperty";
     public static final @Interned String FILE_SYSTEM_VIEW_CHANGED_PROPERTY = "FileSystemViewChanged";
     public static final @Interned String FILE_VIEW_CHANGED_PROPERTY = "fileViewChanged";
     public static final @Interned String FILE_HIDING_CHANGED_PROPERTY = "FileHidingChanged";
     public static final @Interned String FILE_FILTER_CHANGED_PROPERTY = "fileFilterChanged";
     public static final @Interned String FILE_SELECTION_MODE_CHANGED_PROPERTY = "fileSelectionChanged";
     public static final @Interned String ACCESSORY_CHANGED_PROPERTY = "AccessoryChangedProperty";
     public static final @Interned String ACCEPT_ALL_FILE_FILTER_USED_CHANGED_PROPERTY = "acceptAllFileFilterUsedChanged";
     public static final @Interned String DIALOG_TITLE_CHANGED_PROPERTY = "DialogTitleChangedProperty";
     public static final @Interned String DIALOG_TYPE_CHANGED_PROPERTY = "DialogTypeChangedProperty";
     public static final @Interned String CHOOSABLE_FILE_FILTER_CHANGED_PROPERTY = "ChoosableFileFilterChangedProperty";
}
package javax.swing;
public class JOptionPane {
     public static final @Interned String      ICON_PROPERTY = "icon";
     public static final @Interned String      MESSAGE_PROPERTY = "message";
     public static final @Interned String      VALUE_PROPERTY = "value";
     public static final @Interned String      OPTIONS_PROPERTY = "options";
     public static final @Interned String      INITIAL_VALUE_PROPERTY = "initialValue";
     public static final @Interned String      MESSAGE_TYPE_PROPERTY = "messageType";
     public static final @Interned String      OPTION_TYPE_PROPERTY = "optionType";
     public static final @Interned String      SELECTION_VALUES_PROPERTY = "selectionValues";
     public static final @Interned String      INITIAL_SELECTION_VALUE_PROPERTY = "initialSelectionValue";
     public static final @Interned String      INPUT_VALUE_PROPERTY = "inputValue";
     public static final @Interned String      WANTS_INPUT_PROPERTY = "wantsInput";
}
package javax.swing;
public class JTextField {
     public static final @Interned String notifyAction = "notify-field-accept";
}
package javax.swing;
public class SpringLayout {
     public static final @Interned String NORTH  = "North";
     public static final @Interned String SOUTH  = "South";
     public static final @Interned String EAST   = "East";
     public static final @Interned String WEST   = "West";
     public static final @Interned String HORIZONTAL_CENTER   = "HorizontalCenter";
     public static final @Interned String VERTICAL_CENTER   = "VerticalCenter";
     public static final @Interned String BASELINE   = "Baseline";
     public static final @Interned String WIDTH = "Width";
     public static final @Interned String HEIGHT = "Height";
}
package javax.xml.crypto.dsig.spec;
public class ExcC14NParameterSpec {
     public static final @Interned String DEFAULT = "#default";
}

///////////////////////////////////////////////////////////////////////////
/// End of: public static final @Interned String (initialized to constant)
///

package java.awt.color;

public abstract @UsesObjectEquals class ColorSpace implements java.io.Serializable {}
public @UsesObjectEquals class ICC_Profile implements Serializable {}

package java.awt.datatransfer;

public @UsesObjectEquals class Clipboard {}
public @UsesObjectEquals class StringSelection implements Transferable, ClipboardOwner {}
public final @UsesObjectEquals class SystemFlavorMap implements FlavorMap, FlavorTable {}

package java.awt.dnd;

public final @UsesObjectEquals class DnDConstants {}
public abstract @UsesObjectEquals class DragGestureRecognizer implements Serializable {}
public @UsesObjectEquals class DragSource implements Serializable {}
public abstract @UsesObjectEquals class DragSourceAdapter
    implements DragSourceListener, DragSourceMotionListener {}
public @UsesObjectEquals class DragSourceContext
    implements DragSourceListener, DragSourceMotionListener, Serializable {}
public @UsesObjectEquals class DropTarget implements DropTargetListener, Serializable {}
public abstract @UsesObjectEquals class DropTargetAdapter implements DropTargetListener {}
public @UsesObjectEquals class DropTargetContext implements Serializable {}

package java.awt.event;

public abstract @UsesObjectEquals class ComponentAdapter implements ComponentListener {}
public abstract @UsesObjectEquals class ContainerAdapter implements ContainerListener {}
public abstract @UsesObjectEquals class FocusAdapter implements FocusListener {}
public abstract @UsesObjectEquals class HierarchyBoundsAdapter implements HierarchyBoundsListener {}
public abstract @UsesObjectEquals class KeyAdapter implements KeyListener {}
public abstract @UsesObjectEquals class MouseAdapter implements MouseListener, MouseWheelListener, MouseMotionListener {}
public abstract @UsesObjectEquals class MouseMotionAdapter implements MouseMotionListener {}
@UsesObjectEquals class NativeLibLoader {}
public abstract @UsesObjectEquals class WindowAdapter
    implements WindowListener, WindowStateListener, WindowFocusListener {}

package java.awt.font;

@UsesObjectEquals class CharArrayIterator implements CharacterIterator {}
public final @UsesObjectEquals class GlyphJustificationInfo {}
public final @UsesObjectEquals class GlyphMetrics {}
public abstract @UsesObjectEquals class GlyphVector implements Cloneable {}
public abstract @UsesObjectEquals class LayoutPath {}
public final @UsesObjectEquals class LineBreakMeasurer {}
final @UsesObjectEquals class StyledParagraph {}
@UsesObjectEquals class TextJustifier {}
final @UsesObjectEquals class TextLine {}
public final @UsesObjectEquals class TextMeasurer implements Cloneable {}

package java.awt.geom;

@UsesObjectEquals class ArcIterator implements PathIterator {}
public abstract @UsesObjectEquals class CubicCurve2D implements Shape, Cloneable {}
@UsesObjectEquals class CubicIterator implements PathIterator {}
@UsesObjectEquals class EllipseIterator implements PathIterator {}
public @UsesObjectEquals class FlatteningPathIterator implements PathIterator {}
public abstract @UsesObjectEquals class Line2D implements Shape, Cloneable {}
public abstract @UsesObjectEquals class Path2D implements Shape, Cloneable {}
@UsesObjectEquals class LineIterator implements PathIterator {}
public abstract @UsesObjectEquals class QuadCurve2D implements Shape, Cloneable {}
@UsesObjectEquals class QuadIterator implements PathIterator {}
@UsesObjectEquals class RectIterator implements PathIterator {}
@UsesObjectEquals class RoundRectIterator implements PathIterator {}

package java.awt.im;

public @UsesObjectEquals class InputContext {}
public @UsesObjectEquals class InputMethodHighlight {}

package java.awt.image;

public @UsesObjectEquals class AffineTransformOp implements BufferedImageOp, RasterOp {}
public @UsesObjectEquals class BandCombineOp implements  RasterOp {}
public abstract @UsesObjectEquals class BufferStrategy {}
public @UsesObjectEquals class ColorConvertOp implements BufferedImageOp, RasterOp {}
public @UsesObjectEquals class ConvolveOp implements BufferedImageOp, RasterOp {}
public abstract @UsesObjectEquals class DataBuffer {}
public @UsesObjectEquals class FilteredImageSource implements ImageProducer {}
public @UsesObjectEquals class ImageFilter implements ImageConsumer, Cloneable {}
public @UsesObjectEquals class Kernel implements Cloneable {}
public @UsesObjectEquals class LookupOp implements BufferedImageOp, RasterOp {}
public abstract @UsesObjectEquals class LookupTable extends Object{}
public @UsesObjectEquals class MemoryImageSource implements ImageProducer {}
public @UsesObjectEquals class PixelGrabber implements ImageConsumer {}
public @UsesObjectEquals class Raster {}
public @UsesObjectEquals class RescaleOp implements BufferedImageOp, RasterOp {}

package java.awt.image.renderable;

public @UsesObjectEquals class ParameterBlock implements Cloneable, Serializable {}
public @UsesObjectEquals class RenderContext implements Cloneable {}
public @UsesObjectEquals class RenderableImageOp implements RenderableImage {}
public @UsesObjectEquals class RenderableImageProducer implements ImageProducer, Runnable {}

package java.awt.print;

public @UsesObjectEquals class Book implements Pageable {}
public @UsesObjectEquals class PageFormat implements Cloneable {}
public @UsesObjectEquals class Paper implements Cloneable {}
public abstract @UsesObjectEquals class PrinterJob {}

package java.beans;

public @UsesObjectEquals class Beans {}
abstract @UsesObjectEquals class ChangeListenerMap<L extends EventListener> {}
public @UsesObjectEquals class Encoder {}
public @UsesObjectEquals class EventHandler implements InvocationHandler {}
public @UsesObjectEquals class FeatureDescriptor {}
public @UsesObjectEquals class Introspector {}
@UsesObjectEquals class NameGenerator {}
public abstract @UsesObjectEquals class PersistenceDelegate {}
public @UsesObjectEquals class PropertyChangeSupport implements Serializable {}
public @UsesObjectEquals class PropertyEditorSupport implements PropertyEditor {}
public @UsesObjectEquals class SimpleBeanInfo implements BeanInfo {}
public @UsesObjectEquals class Statement {}
public @UsesObjectEquals class VetoableChangeSupport implements Serializable {}
public @UsesObjectEquals class XMLDecoder implements AutoCloseable {}

package java.beans.beancontext;

public @UsesObjectEquals class BeanContextChildSupport implements BeanContextChild, BeanContextServicesListener, Serializable {}

package java.lang.invoke;

abstract public @UsesObjectEquals class CallSite {}
final @UsesObjectEquals class InvokeDynamic {}
// public @UsesObjectEquals class Linkage {}
public abstract @UsesObjectEquals class MethodHandleImpl {}
public @UsesObjectEquals class MethodHandles {}
public @UsesObjectEquals class SwitchPoint {}

package java.io;

@UsesObjectEquals class Bits {}
public final @UsesObjectEquals class Console implements Flushable {}
@UsesObjectEquals class DeleteOnExitHook {}
@UsesObjectEquals class ExpiringCache {}
abstract @UsesObjectEquals class FileSystem {}
// Defined above
// public @UsesObjectEquals class ObjectStreamField
//     implements Comparable<Object>
// {}
public abstract @UsesObjectEquals class OutputStream implements Closeable, Flushable {}
public @UsesObjectEquals class RandomAccessFile implements DataOutput, DataInput, Closeable {}
public abstract @UsesObjectEquals class Reader implements Readable, Closeable {}
final @UsesObjectEquals class SerialCallbackContext {}
public @UsesObjectEquals class StreamTokenizer {}
public abstract @UsesObjectEquals class Writer implements Appendable, Closeable, Flushable {}

package java.lang;

abstract @UsesObjectEquals class AbstractStringBuilder implements Appendable, CharSequence {}
@UsesObjectEquals class ApplicationShutdownHooks {}
@UsesObjectEquals class AssertionStatusDirectives {}
abstract @UsesObjectEquals class CharacterData {}
@UsesObjectEquals class CharacterName {}
public abstract @UsesObjectEquals class ClassLoader {}
public final @UsesObjectEquals class Compiler  {}
final @UsesObjectEquals class ConditionalSpecialCasing {}
public final @UsesObjectEquals class Math {}
public @UsesObjectEquals class Package implements java.lang.reflect.AnnotatedElement {}
public abstract @UsesObjectEquals class Process {}
public @UsesObjectEquals class Runtime {}
public @UsesObjectEquals class SecurityManager {}
@UsesObjectEquals class Shutdown {}
public final @UsesObjectEquals class StrictMath {}
@UsesObjectEquals class StringCoding {}
public final @UsesObjectEquals class System {}
public @UsesObjectEquals class ThreadGroup implements Thread.UncaughtExceptionHandler {}
public @UsesObjectEquals class ThreadLocal<T> {}
public @UsesObjectEquals class Throwable implements Serializable {}
public final
@UsesObjectEquals class Void {}

package java.lang.instrument;

public final @UsesObjectEquals class ClassDefinition {}

package java.lang.management;

public @UsesObjectEquals class LockInfo {}
public @UsesObjectEquals class ManagementFactory {}
public @UsesObjectEquals class MemoryNotificationInfo {}
public @UsesObjectEquals class MemoryUsage {}
public @UsesObjectEquals class ThreadInfo {}

package java.lang.ref;

public @UsesObjectEquals class ReferenceQueue<T> {}

package java.lang.reflect;

public final
@UsesObjectEquals class Array {}
public @UsesObjectEquals class Modifier {}
@UsesObjectEquals class ReflectAccess implements sun.reflect.LangReflectAccess {}

package java.math;

@UsesObjectEquals class BitSieve {}
@UsesObjectEquals class MutableBigInteger {}

package java.net;

public abstract
@UsesObjectEquals class Authenticator {}
public abstract @UsesObjectEquals class CacheRequest {}
public abstract @UsesObjectEquals class CacheResponse {}
abstract public @UsesObjectEquals class ContentHandler {}
public abstract @UsesObjectEquals class CookieHandler {}
public final
@UsesObjectEquals class DatagramPacket {}
public @UsesObjectEquals class DatagramSocket implements java.io.Closeable {}
public abstract @UsesObjectEquals class DatagramSocketImpl implements SocketOptions {}
public final @UsesObjectEquals class IDN {}
@UsesObjectEquals class InMemoryCookieStore implements CookieStore {}
@UsesObjectEquals class Inet4AddressImpl implements InetAddressImpl {}
@UsesObjectEquals class Inet6AddressImpl implements InetAddressImpl {}
public final @UsesObjectEquals class PasswordAuthentication {}
public abstract @UsesObjectEquals class ProxySelector {}
public abstract @UsesObjectEquals class ResponseCache {}
public @UsesObjectEquals class ServerSocket implements java.io.Closeable {}
public @UsesObjectEquals class Socket implements java.io.Closeable {}
public abstract @UsesObjectEquals class SocketImpl implements SocketOptions {}
public final @UsesObjectEquals class StandardSocketOption {}
public @UsesObjectEquals class URLDecoder {}
public @UsesObjectEquals class URLEncoder {}
public abstract @UsesObjectEquals class URLStreamHandler {}

package java.nio;

@UsesObjectEquals class Bits {}
public final @UsesObjectEquals class ByteOrder {}

package java.nio.channels;

public abstract @UsesObjectEquals class AsynchronousChannelGroup {}
public abstract @UsesObjectEquals class AsynchronousFileChannel
    implements AsynchronousChannel {}
public abstract @UsesObjectEquals class AsynchronousServerSocketChannel
    implements AsynchronousChannel, NetworkChannel {}
public abstract @UsesObjectEquals class AsynchronousSocketChannel
    implements AsynchronousByteChannel, NetworkChannel {}
public final @UsesObjectEquals class Channels {}
public abstract @UsesObjectEquals class FileLock implements AutoCloseable {}
public abstract @UsesObjectEquals class MembershipKey {}
public abstract @UsesObjectEquals class Pipe {}
public abstract @UsesObjectEquals class SelectionKey {}
public abstract @UsesObjectEquals class Selector implements Closeable {}

package java.nio.channels.spi;

public abstract @UsesObjectEquals class AbstractInterruptibleChannel
    implements Channel, InterruptibleChannel {}
public abstract @UsesObjectEquals class AsynchronousChannelProvider {}
public abstract @UsesObjectEquals class SelectorProvider {}

package java.nio.charset;

public @UsesObjectEquals class CoderResult {}
public @UsesObjectEquals class CodingErrorAction {}

package java.nio.charset.spi;

public abstract @UsesObjectEquals class CharsetProvider {}

package java.nio.file;

@UsesObjectEquals class CopyMoveHelper {}
public abstract @UsesObjectEquals class FileStore {}
public abstract @UsesObjectEquals class FileSystem
    implements Closeable {}
public final @UsesObjectEquals class FileSystems {}
@UsesObjectEquals class FileTreeWalker {}
public final @UsesObjectEquals class Files {}
public final @UsesObjectEquals class Paths {}
public @UsesObjectEquals class SimpleFileVisitor<T> implements FileVisitor<T> {}
public final @UsesObjectEquals class StandardWatchEventKinds {}
@UsesObjectEquals class TempFileHelper {}

package java.nio.file.attribute;

public final @UsesObjectEquals class PosixFilePermissions {}
public abstract @UsesObjectEquals class UserPrincipalLookupService {}

package java.nio.file.spi;

public abstract @UsesObjectEquals class FileSystemProvider {}
public abstract @UsesObjectEquals class FileTypeDetector {}

package java.rmi;

public final @UsesObjectEquals class Naming {}

package java.rmi.dgc;

public final @UsesObjectEquals class Lease implements java.io.Serializable {}

package java.rmi.registry;

public final @UsesObjectEquals class LocateRegistry {}

package java.rmi.server;

public @UsesObjectEquals class RMIClassLoader {}
public abstract @UsesObjectEquals class RMIClassLoaderSpi {}
public abstract @UsesObjectEquals class RMISocketFactory
        implements RMIClientSocketFactory, RMIServerSocketFactory {}

package java.security;

public final @UsesObjectEquals class AccessController {}
public @UsesObjectEquals class AlgorithmParameterGenerator {}
public abstract @UsesObjectEquals class AlgorithmParameterGeneratorSpi {}
public @UsesObjectEquals class AlgorithmParameters {}
public abstract @UsesObjectEquals class AlgorithmParametersSpi {}
public @UsesObjectEquals class GuardedObject implements java.io.Serializable {}
public @UsesObjectEquals class KeyFactory {}
public abstract @UsesObjectEquals class KeyFactorySpi {}
public final @UsesObjectEquals class KeyPair implements java.io.Serializable {}
public abstract @UsesObjectEquals class KeyPairGeneratorSpi {}
public @UsesObjectEquals class KeyRep implements Serializable {}
public @UsesObjectEquals class KeyStore {}
public abstract @UsesObjectEquals class KeyStoreSpi {}
public abstract @UsesObjectEquals class MessageDigestSpi {}
public abstract @UsesObjectEquals class PermissionCollection implements java.io.Serializable {}
public abstract @UsesObjectEquals class Policy {}
public abstract @UsesObjectEquals class PolicySpi {}
public @UsesObjectEquals class ProtectionDomain {}
public abstract @UsesObjectEquals class SecureRandomSpi implements java.io.Serializable {}
public final @UsesObjectEquals class Security {}
public abstract @UsesObjectEquals class SignatureSpi {}
public final @UsesObjectEquals class SignedObject implements Serializable {}
public @UsesObjectEquals class URIParameter implements
        Policy.Parameters, javax.security.auth.login.Configuration.Parameters {}

package java.security.cert;

public @UsesObjectEquals class CertPathBuilder {}
public abstract @UsesObjectEquals class CertPathBuilderSpi {}
public abstract @UsesObjectEquals class CertPathHelper {}
public @UsesObjectEquals class CertPathValidator {}
public abstract @UsesObjectEquals class CertPathValidatorSpi {}
public @UsesObjectEquals class CertStore {}
public @UsesObjectEquals class CertificateFactory {}
public abstract @UsesObjectEquals class CertificateFactorySpi {}
public @UsesObjectEquals class CollectionCertStoreParameters
    implements CertStoreParameters {}
public abstract @UsesObjectEquals class PKIXCertPathChecker implements Cloneable {}
public @UsesObjectEquals class PKIXCertPathValidatorResult implements CertPathValidatorResult {}
public @UsesObjectEquals class PKIXParameters implements CertPathParameters {}
public @UsesObjectEquals class PolicyQualifierInfo {}
public @UsesObjectEquals class TrustAnchor {}
public @UsesObjectEquals class X509CRLSelector implements CRLSelector {}
public @UsesObjectEquals class X509CertSelector implements CertSelector {}

package java.security.spec;

public @UsesObjectEquals class DSAParameterSpec implements AlgorithmParameterSpec,
java.security.interfaces.DSAParams {}
public @UsesObjectEquals class DSAPrivateKeySpec implements KeySpec {}
public @UsesObjectEquals class DSAPublicKeySpec implements KeySpec {}
public @UsesObjectEquals class ECGenParameterSpec implements AlgorithmParameterSpec {}
public @UsesObjectEquals class ECParameterSpec implements AlgorithmParameterSpec {}
public @UsesObjectEquals class ECPrivateKeySpec implements KeySpec {}
public @UsesObjectEquals class ECPublicKeySpec implements KeySpec {}
public abstract @UsesObjectEquals class EncodedKeySpec implements KeySpec {}
public @UsesObjectEquals class MGF1ParameterSpec implements AlgorithmParameterSpec {}
public @UsesObjectEquals class PSSParameterSpec implements AlgorithmParameterSpec {}
public @UsesObjectEquals class RSAKeyGenParameterSpec implements AlgorithmParameterSpec {}
public @UsesObjectEquals class RSAOtherPrimeInfo {}
public @UsesObjectEquals class RSAPrivateKeySpec implements KeySpec {}
public @UsesObjectEquals class RSAPublicKeySpec implements KeySpec {}

package java.sql;

public @UsesObjectEquals class DriverManager {}
public @UsesObjectEquals class DriverPropertyInfo {}
public @UsesObjectEquals class Types {}

package java.text;

public @UsesObjectEquals class Annotation {}
public final @UsesObjectEquals class Bidi {}
@UsesObjectEquals class BreakDictionary {}
@UsesObjectEquals class CalendarBuilder {}
@UsesObjectEquals class CharacterIteratorFieldDelegate implements Format.FieldDelegate {}
public final @UsesObjectEquals class CollationElementIterator {}
final @UsesObjectEquals class CollationRules {}
final @UsesObjectEquals class EntryPair {}
final @UsesObjectEquals class MergeCollation {}
public final @UsesObjectEquals class Normalizer {}
final @UsesObjectEquals class RBCollationTables {}
final @UsesObjectEquals class RBTableBuilder {}

package java.util.concurrent;

public abstract @UsesObjectEquals class AbstractExecutorService implements ExecutorService {}
public @UsesObjectEquals class CountDownLatch {}
public @UsesObjectEquals class CyclicBarrier {}
public @UsesObjectEquals class Exchanger<V> {}
public @UsesObjectEquals class ExecutorCompletionService<V> implements CompletionService<V> {}
public @UsesObjectEquals class Executors {}
public abstract @UsesObjectEquals class ForkJoinTask<V> implements Future<V>, Serializable {}
public @UsesObjectEquals class FutureTask<V> implements RunnableFuture<V> {}
public @UsesObjectEquals class Phaser {}

package java.util.concurrent.atomic;

public @UsesObjectEquals class AtomicBoolean implements java.io.Serializable {}
public @UsesObjectEquals class AtomicIntegerArray implements java.io.Serializable {}
public abstract @UsesObjectEquals class  AtomicIntegerFieldUpdater<T> {}
public @UsesObjectEquals class AtomicLongArray implements java.io.Serializable {}
public abstract @UsesObjectEquals class  AtomicLongFieldUpdater<T> {}
public @UsesObjectEquals class AtomicMarkableReference<V> {}
public @UsesObjectEquals class AtomicReference<V>  implements java.io.Serializable {}
public @UsesObjectEquals class AtomicReferenceArray<E> implements java.io.Serializable {}
public abstract @UsesObjectEquals class AtomicReferenceFieldUpdater<T, V> {}

package java.util.concurrent.locks;

public abstract @UsesObjectEquals class AbstractOwnableSynchronizer
    implements java.io.Serializable {}
public @UsesObjectEquals class LockSupport {}

package java.util.jar;

@UsesObjectEquals class JavaUtilJarAccessImpl implements JavaUtilJarAccess {}

package java.util.logging;

public @UsesObjectEquals class ErrorManager {}
public abstract @UsesObjectEquals class Formatter {}
public abstract @UsesObjectEquals class Handler {}
public @UsesObjectEquals class LogManager {}
public @UsesObjectEquals class LogRecord implements java.io.Serializable {}
// Defined above
// public @UsesObjectEquals class Logger {}
@UsesObjectEquals class Logging implements LoggingMXBean {}
// Commented out because LoggingProxy is in package sun.util.logging, and
// we don't want references to sun.* classes here.  (LoggingProxyImpl isn't
// a public class anyway.)
// @UsesObjectEquals class LoggingProxyImpl implements LoggingProxy {}

package java.util.prefs;

@UsesObjectEquals class Base64 {}
public abstract @UsesObjectEquals class Preferences {}
@UsesObjectEquals class XmlSupport {}

package java.util.regex;

final @UsesObjectEquals class ASCII {}
public final @UsesObjectEquals class Matcher implements MatchResult {}
// Defined above
// public final @UsesObjectEquals class Pattern
//     implements java.io.Serializable
// {}

package java.util.spi;

public abstract @UsesObjectEquals class LocaleServiceProvider {}

package java.util.zip;

public @UsesObjectEquals class Adler32 implements Checksum {}
public @UsesObjectEquals class CRC32 implements Checksum {}
public @UsesObjectEquals class Deflater {}
public @UsesObjectEquals class Inflater {}
@UsesObjectEquals class ZStreamRef {}
final @UsesObjectEquals class ZipCoder {}
@UsesObjectEquals class ZipConstants64 {}
public @UsesObjectEquals class ZipEntry implements ZipConstants, Cloneable {}
public @UsesObjectEquals class ZipFile implements ZipConstants, Closeable {}
