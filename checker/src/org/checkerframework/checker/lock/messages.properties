### Error messages for the Lock Checker
contracts.precondition.not.satisfied=unguarded call to method '%s' requiring '%s' to be held
contracts.precondition.not.satisfied.field=unguarded access to field, variable or parameter '%s' guarded by '%s'
override.holding.invalid=%s in %s cannot override %s in %s; attempting to use an incompatible holding requirement\nfound   : %s\nrequired: %s
override.sideeffect.invalid=%s in %s cannot override %s in %s; the side-effect annotation on an overridder method must be at least as strong as that one the overridden method\nfound   : %s\nrequired: %s
multiple.sideeffect.annotations=method is annotated with multiple side effect annotations
method.guarantee.violated=method %s calls method %s with a weaker side effect guarantee
cannot.dereference=cannot dereference expression %s with type annotation @%s
primitive.type.guardedby=primitive types may not be annotated with any qualifier from the @GuardedBy hierarchy
explicit.lock.synchronized=expression of synchronized block is an explicit lock
guardsatisfied.with.mayreleaselocks=a method annotated with @MayReleaseLocks may not have a formal parameter or receiver annotated with @GuardSatisfied
