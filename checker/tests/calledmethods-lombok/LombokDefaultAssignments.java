// Generated by delombok at Thu Aug 01 14:08:43 PDT 2019

import java.util.Optional;

public class LombokDefaultAssignments {
    @lombok.NonNull Optional<String> bar;

    public static class LombokDefaultAssignmentsBuilder {
        private Optional<String> bar = Optional.empty();

        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        LombokDefaultAssignmentsBuilder() {}

        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        public LombokDefaultAssignmentsBuilder bar(@lombok.NonNull final Optional<String> bar) {
            if (bar == null) {
                throw new java.lang.NullPointerException("bar is marked non-null but is null");
            }
            this.bar = bar;
            return this;
        }

        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        public LombokDefaultAssignments build() {
            return new LombokDefaultAssignments(bar);
        }

        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        public java.lang.String toString() {
            return "LombokDefaultAssignments.LombokDefaultAssignmentsBuilder(bar=" + this.bar + ")";
        }
    }

    static void test() {
        LombokDefaultAssignments.builder().build();
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    LombokDefaultAssignments(@lombok.NonNull final Optional<String> bar) {
        if (bar == null) {
            throw new java.lang.NullPointerException("bar is marked non-null but is null");
        }
        this.bar = bar;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public static LombokDefaultAssignmentsBuilder builder() {
        return new LombokDefaultAssignmentsBuilder();
    }
}
