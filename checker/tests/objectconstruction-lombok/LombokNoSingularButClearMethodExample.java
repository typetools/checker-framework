// Generated by delombok at Tue Aug 06 14:55:43 PDT 2019

import java.util.List;

public class LombokNoSingularButClearMethodExample {
    @lombok.NonNull List<Object> items;

    // This one should throw an error, because the field isn't
    // automatically initialized.
    public static void testNoItems() {
        // :: error: finalizer.invocation.invalid
        LombokNoSingularButClearMethodExample.builder().build();
    }

    public static void testWithList(List<Object> l) {
        LombokNoSingularButClearMethodExample.builder().items(l).build();
    }

    public static class LombokNoSingularButClearMethodExampleBuilder {
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        private List<Object> items;

        public void clearItems() {}

        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        LombokNoSingularButClearMethodExampleBuilder() {}

        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        public LombokNoSingularButClearMethodExampleBuilder items(
                @lombok.NonNull final List<Object> items) {
            if (items == null) {
                throw new java.lang.NullPointerException("items is marked non-null but is null");
            }
            this.items = items;
            return this;
        }

        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        public LombokNoSingularButClearMethodExample build() {
            return new LombokNoSingularButClearMethodExample(items);
        }

        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        public java.lang.String toString() {
            return "LombokNoSingularButClearMethodExample.LombokNoSingularButClearMethodExampleBuilder(items="
                    + this.items
                    + ")";
        }
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    LombokNoSingularButClearMethodExample(@lombok.NonNull final List<Object> items) {
        if (items == null) {
            throw new java.lang.NullPointerException("items is marked non-null but is null");
        }
        this.items = items;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public static LombokNoSingularButClearMethodExampleBuilder builder() {
        return new LombokNoSingularButClearMethodExampleBuilder();
    }
}
