// Generated by delombok at Fri Jul 26 12:44:07 PDT 2019

class DefaultedName {
    @lombok.NonNull String name;

    static void test1() {
        builder().build();
    }

    static void test2(Object foo) {
        DefaultedNameBuilder b = builder();
        if (foo != null) {
            b.name(foo.toString());
        }
        b.build();
    }

    @java.lang.SuppressWarnings("all")
    private static String $default$name() {
        return "Martin";
    }

    @java.lang.SuppressWarnings("all")
    DefaultedName(@lombok.NonNull final String name) {
        if (name == null) {
            throw new java.lang.NullPointerException("name is marked non-null but is null");
        }
        this.name = name;
    }

    @java.lang.SuppressWarnings("all")
    public static class DefaultedNameBuilder {
        @java.lang.SuppressWarnings("all")
        private boolean name$set;

        @java.lang.SuppressWarnings("all")
        private String name;

        @java.lang.SuppressWarnings("all")
        DefaultedNameBuilder() {}

        @java.lang.SuppressWarnings("all")
        public DefaultedNameBuilder name(@lombok.NonNull final String name) {
            if (name == null) {
                throw new java.lang.NullPointerException("name is marked non-null but is null");
            }
            this.name = name;
            name$set = true;
            return this;
        }

        @java.lang.SuppressWarnings("all")
        public DefaultedName build() {
            String name = this.name;
            if (!name$set) name = DefaultedName.$default$name();
            return new DefaultedName(name);
        }

        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        public java.lang.String toString() {
            return "DefaultedName.DefaultedNameBuilder(name=" + this.name + ")";
        }
    }

    @java.lang.SuppressWarnings("all")
    public static DefaultedNameBuilder builder() {
        return new DefaultedNameBuilder();
    }
}
