#!/bin/sh

#
# This file simply redirects all passed arguments
# to org.checkerframework.framework.util.CheckerDevelMain
#
# This script loads the .class files found in the
# build directory before it uses any jar files so
# that a user does not have to repackage the whole
# project (that is, create .jar files) to debug changes.

# When editing, keep this file in sync with javac-debug in this directory.

mydir="`dirname $0`"
case `uname -s` in
    CYGWIN*)
      mydir=`cygpath -m $mydir`
      ;;
esac

binaryDir="${mydir}"/../dist

# langtools bin dir for Jenkins
if [ -z "$LT_BIN" ] || [ "$LT_BIN" = "" ]; then
   ltBinDir="${mydir}"/../../../jsr308-langtools/build/classes
else
   ltBinDir="$LT_BIN"
fi

jdkPaths="${mydir}"/../jdk/annotated

cfDir="${mydir}"/../..
annoToolsDir="${cfDir}"/../annotation-tools
# Put "checker" last, as "ant bindist" puts other projects
# into the checker/build directory.
buildDirs="${annoToolsDir}"/scene-lib/bin:"${annoToolsDir}"/annotation-file-utilities/annotation-file-utilities.jar:"${cfDir}"/dataflow/build:"${cfDir}"/javacutil/build:"${cfDir}"/stubparser/build:"${cfDir}"/framework/build:"${cfDir}"/checker/build

## Preserve quoting and spaces in arguments, which would otherwise be lost
## due to being passed through the shell twice.
# Unset IFS and use newline as arg separator to preserve spaces in args
DUALCASE=1  # for MKS: make case statement case-sensitive (6709498)
saveIFS="$IFS"
nl='
'
for i in "$@" ; do
   IFS=
   args=$args$nl"'"$i"'"
   IFS="$saveIFS"
done

eval "java" \
     "-DCheckerDevelMain.cp=${buildDirs} " \
     "-DCheckerDevelMain.compile.bcp=${jdkPaths} " \
     "-DCheckerDevelMain.runtime.bcp=${ltBinDir} " \
     "-DCheckerDevelMain.binary=${binaryDir}" \
     "-classpath ${buildDirs} " \
     "org.checkerframework.framework.util.CheckerDevelMain" "-AprintErrorStack" ${args}
