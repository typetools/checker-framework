package java.lang:
annotation @UnderInitialization: @java.lang.annotation.Retention(value=RUNTIME) @java.lang.annotation.Target(value={TYPE_USE})

package java.lang:
annotation @PolyRaw: @java.lang.annotation.Retention(value=RUNTIME) @java.lang.annotation.Target(value={TYPE_USE})

package java.lang:
annotation @ThisUnderInitialization: @java.lang.annotation.Retention(value=RUNTIME) @java.lang.annotation.Target(value={TYPE_USE})

package org.checkerframework.afu.annotator.tests:
class GenericCell:

    field internalList:
        insert-annotation Variable.type, ParameterizedType.typeArgument 0: @java.lang.ThisUnderInitialization
        insert-annotation Variable.type: @java.lang.ThisUnderInitialization

    method <init>(Ljava/util/List;)V:
        return:
        insert-annotation Method.parameter 0, Variable.type, ParameterizedType.typeArgument 0: @java.lang.UnderInitialization
        insert-annotation Method.parameter 0, Variable.type: @java.lang.UnderInitialization

    method getList()Ljava/util/List;:
        return:
        insert-annotation Method.type, ParameterizedType.typeArgument 0: @java.lang.PolyRaw
        insert-annotation Method.parameter -1: @java.lang.PolyRaw
        insert-annotation Method.type: @java.lang.PolyRaw

