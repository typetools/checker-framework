dependencies {
    compile project(':checker')
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

task downloadJdk() {
    description 'Downloads jdk8.jar and copies it to checker/dist'
    // See instructions for updating the jdk.jar at https://github.com/typetools/annotated-libraries/blob/master/README.md
    String shaHash = '3e57e020050ee8b679622e7f864e7dff17aa8acc'
    File jdk = new File(buildDir, "jdk8-${shaHash}.jar");
    onlyIf {
        !jdk.exists() || !(new File('"../checker/dist/jdk8.jar').exists())
    }

    doLast {
        if (!jdk.exists()) {
            download {
                src "https://github.com/typetools/annotated-libraries/raw/${shaHash}/jdk8.jar"
                overwrite true
                dest jdk
            }
        }
        copy {
            from(jdk) {
                rename jdk.name, 'jdk8.jar'
            }
            into "../checker/dist"
        }
    }
}

task buildJdk(type: Jar, group: 'Build') {
    description 'Builds jdk8.jar'
    dependsOn(':checker:copyJarsToDist')

    doLast {
        if (System.getenv('JAVA_HOME') == null) {
            throw new GradleException("Environment variable JAVA_HOME is not set.")
        }
        exec {
            executable 'make'
            environment CHECKERFRAMEWORK: "${projectDir}/..",
                    LANGTOOLS: "${jsr308}/jsr308-langtools",
                    ANNOTATION_TOOLS: "${afu}/..",
                    CLASSPATH: project(':checker').tasks.getByName('shadowJar').archivePath,
                    LT_BIN: "${jsr308}/jsr308-langtools/dist/bin"
            args += ["-C", "../checker/jdk/"]
        }

        copy {
            from '../checker/jdk/jdk.jar'
            rename { String fileName ->
                fileName.replace(fileName, "jdk8.jar")
            }
            into '../checker/jdk'
        }

        copy {
            from '../checker/jdk/jdk8.jar'
            into '../checker/dist'
        }
    }
}
